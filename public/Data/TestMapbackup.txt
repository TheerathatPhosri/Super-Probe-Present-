import React, { useEffect, useState, useRef } from 'react';
import DetailsPM from '../components/DetailsPM';

interface Amphoe {
  name: string;
  Latitude: number;
  Longitude: number;
  PM25: string;
  temp: string;
  humid: string;
  wind: string;
  noise: string;
  traffic: string;
}

const TestMap = () => {
  const [items, setItems] = useState<Amphoe[]>([]);
  const [selectedAmphoe, setSelectedAmphoe] = useState<Amphoe | null>(null);
  const [searchLat, setSearchLat] = useState<string>('');
  const [searchLng, setSearchLng] = useState<string>('');

  const mapRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const script = document.createElement('script');
    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCyVjUgkD3C3rfbXdhrG7T8TsFH-BBS6a0`;
    script.async = true;
    script.defer = true;
    script.onload = fetchDataAndInitializeMap;
    document.head.appendChild(script);
  }, []);

  const fetchDataAndInitializeMap = () => {
    fetch('/public/Data/DataProbe2.json')
      .then((res) => res.json())
      .then((result) => {
        if (Array.isArray(result)) {
          const amphoes = result.map((amphoe: Amphoe) => ({
            ...amphoe,
            Latitude: amphoe.Latitude !== undefined ? parseFloat(amphoe.Latitude as unknown as string) || 0 : 0,
            Longitude: amphoe.Longitude !== undefined ? parseFloat(amphoe.Longitude as unknown as string) || 0 : 0,
          }));
          setItems(amphoes);
          initializeMap(amphoes);
        } else {
          console.error('Data is not an array:', result);
        }
      })
      .catch((error) => {
        console.error('Error fetching data:', error);
      });
  };

  const initializeMap = (amphoes: Amphoe[]) => {
    if (mapRef.current && window.google && window.google.maps) {
      const map = new window.google.maps.Map(mapRef.current, {
        center: { lat: 13.7563, lng: 100.5018 },
        zoom: 6,
      });
      amphoes.forEach((amphoe) => {
        createCircle(map, amphoe);
      });
    }
  };

  const zoomToSelectedArea = (selectedAmphoe: Amphoe) => {
    if (mapRef.current && window.google && window.google.maps) {
      const map = new window.google.maps.Map(mapRef.current, {
        center: { lat: selectedAmphoe.Latitude, lng: selectedAmphoe.Longitude },
        zoom: 10,
      });
      createCircle(map, selectedAmphoe);
    }
  };

  const createCircle = (map: google.maps.Map, amphoe: Amphoe) => {
  let circleColor = 'green';
  const pm25Value = parseFloat(amphoe.PM25);
  if (!isNaN(pm25Value)) {
    if (pm25Value >= 70 && pm25Value <= 80) {
      circleColor = '#FFA500'; // Orange color
    } else if (pm25Value > 80) {
      circleColor = '#FF0000'; // Red color
    }
  }
  const circle = new window.google.maps.Circle({
    strokeColor: circleColor,
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: circleColor,
    fillOpacity: 0.35,
    map: map,
    center: { lat: amphoe.Latitude, lng: amphoe.Longitude },
    radius: 15000,
  });

  window.google.maps.event.addListener(circle, 'click', () => {
    const infoWindowContent = `
      <div>Lat: ${amphoe.Latitude} Long: ${amphoe.Longitude}</div>
      <div>อำเภอ: ${amphoe.name}</div>
      <div>PM2.5: ${amphoe.PM25}</div>
      <div>อุณหภูมิ: ${amphoe.temp}</div>
      <div>ความชื้น: ${amphoe.humid}</div>
      <div>แรงลม: ${amphoe.wind}</div>
      <div>เสียง: ${amphoe.noise}</div>
      <div>สภาพการจราจร: ${amphoe.traffic}</div>`;

    const infoWindow = new window.google.maps.InfoWindow({
      content: infoWindowContent,
    });

    infoWindow.setPosition(circle.getCenter());
    infoWindow.open(map);
  });
};

  const handleProvinceSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const selectedProvince = event.target.value;
    const selectedAmphoe = items.find((amphoe) => amphoe.name === selectedProvince);
    if (selectedAmphoe) {
      setSelectedAmphoe(selectedAmphoe);
      zoomToSelectedArea(selectedAmphoe);
    }
  };

  return (
    <>
      <div className='mt-10'>
        <select className="form-select" aria-label="Default select example" onChange={handleProvinceSelect}>
          <option selected disabled>กรุณาเลือกพื้นที่</option>
          {items.map((amphoe) => (
            <option key={amphoe.name} value={amphoe.name}>{amphoe.name}</option>
          ))}
        </select>
        <div ref={mapRef} style={{ height: '600px', width: '100%' }}></div>
        <br />
        {/* {selectedAmphoe && (
          <div>
            <h2>ข้อมูลอำเภอที่ค้นหา</h2>
            <div>อำเภอ: {selectedAmphoe.name}</div>
            <div>PM2.5: {selectedAmphoe.PM25}</div>
            <div>อุณหภูมิ: {selectedAmphoe.temp}</div>
            <div>ความชื้น: {selectedAmphoe.humid}</div>
            <div>แรงลม: {selectedAmphoe.wind}</div>
            <div>เสียง: {selectedAmphoe.noise}</div>
            <div>สภาพการจราจร: {selectedAmphoe.traffic}</div>
          </div>
        )}
        <DetailsPM /> */}
      </div>
    </>
  );
};

export default TestMap;
